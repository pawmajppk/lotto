server:
  port: 8081
spring:
  application.name: lotto
  datasource:
    platform: postgres
    driver-class-name: org.postgresql.Driver
    schemaName: ${spring.application.name}
    url: jdbc:postgresql://${DB_HOST:postgresdb}:${DB_PORT:5432}/${DATABASE:lotto}?currentSchema=${spring.datasource.schemaName}&stringtype=unspecified&ApplicationName=${spring.application.name}
    username: ${DBUSER:lotto}
    password: ${DBPASSWORD:lotto}
    # if true initializes db using sql scripts
    initialize: false
    removeAbandoned: true
    removeAbandonedTimeout: 60
    max-active: 2
    min-idle: 2
    max-idle: 2
    initial-size: 2
  jpa:
    database: POSTGRESQL
    # initialize a database using JPA.
    generate-ddl: false
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
        default_schema: ${spring.datasource.schemaName}
    hibernate:
      # controls db initialization behavior in a more fine-grained
      # way [none|validate|update|create|create-drop]
      ddl-auto: none

cloud:
  aws:
    stack:
      auto: false

---

spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DATABASE:lotto}?currentSchema=${spring.datasource.schemaName}&stringtype=unspecified&ApplicationName=${spring.application.name}
  jpa:
    show-sql: true
cloud:
  aws:
    region:
      static: eu-central-1
  localstack:
    sqs:
      url: http://localstack:4566